data "azuread_app_role_assignment" "existing_assignments" {
  for_each            = { for pair in setproduct(keys(data.azuread_group.groups), keys(data.azuread_service_principal.enterprise_apps)) : 
                          "${pair[0]}-${pair[1]}" => pair }
  principal_object_id = data.azuread_group.groups[each.value[0]].object_id
  resource_object_id  = data.azuread_service_principal.enterprise_apps[each.value[1]].object_id
}

resource "azuread_app_role_assignment" "group_assignments" {
  for_each = {
    for pair in setproduct(keys(data.azuread_group.groups), keys(data.azuread_service_principal.enterprise_apps)) :
    "${pair[0]}-${pair[1]}" => pair 
    if !contains([for assignment in data.azuread_app_role_assignment.existing_assignments : assignment.app_role_id], 
                 lookup(data.azuread_service_principal.enterprise_apps[each.value[1]].app_roles[0], "id"))
  }

  principal_object_id = data.azuread_group.groups[each.value[0]].object_id
  resource_object_id  = data.azuread_service_principal.enterprise_apps[each.value[1]].object_id
  app_role_id         = lookup(data.azuread_service_principal.enterprise_apps[each.value[1]].app_roles[0], "id")

  lifecycle {
    ignore_changes = all
    create_before_destroy = true
  }